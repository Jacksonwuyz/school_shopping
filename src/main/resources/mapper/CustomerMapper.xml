<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
例如namespace="com.cn.mybatis.test1.dao.userMapper"就是com.cn.mybatis.test1.dao(包名)+userMapper(userMapper.xml文件去除后缀)
 -->
<mapper namespace="com.example.school_shopping.dao.CustomerDao">

	<select id="getCustomerList" resultType="Customer">
		select * from customer where id=#{id}
	</select>

	<!--添加-->
	<insert id="SaveCustomer">
		insert into customer(id,username,password,name,tel,address,zip,email,picUrl,intro,createTime) values(null,#{username},#{password},#{name},#{tel},#{address},#{zip},#{email},#{picUrl},#{intro},#{createTime})
	</insert>
	<!--重名-->
	<select id="existsCustomer" resultType="Customer">
		select * from customer where username=#{username}
	</select>
	<!--获取表中所有的数据-->
	<select id="readAll" resultType="Customer">
		select * from customer order by id desc
	</select>
	<!--登录-->
	<select id="login" resultType="Customer">
		select * from customer where username=#{username} and password=#{password}
	</select>
	<!--删除-->
	<delete id="deleteCustomer">
		delete from customer where id=#{id}
	</delete>
	<!--注册-->
	<insert id="SaveShopCustomer">
		insert into customer(id,username,name,password,picUrl,tel,address,email,intro,createTime) values(null,#{username},#{name},#{password},#{picUrl},#{tel},#{address},#{email},#{intro},#{createTime})
	</insert>

	<update id="updateCustomer">
		update customer
		<set>
			<if test="username!=null and username.length()>0">username=#{username},</if>
			<if test="password!=null and password.length()>0">password=#{password},</if>
			<if test="name!=null and name.length()>0">name=#{name},</if>
			<if test="picUrl!=null">picUrl=#{picUrl},</if>
			<if test="tel!=null">tel=#{tel},</if>
			<if test="address!=null">address=#{address},</if>
			<if test="email!=null">email=#{email},</if>
			<if test="intro!=null">intro=#{intro},</if>
		</set>
		where id=#{id}
	</update>

	<select id="getCustomer" resultType="Customer">
		select * from customer where id=#{id}
	</select>

	<select id="total" resultType="int">
		select count(id) from customer
	</select>
	<select id="querySize" resultType="int">
		select count(1) from customer
		<if test="objectQuery!=null">
			<where>
				<if test="objectQuery.username!=null and objectQuery.username.length()>0">
					<!-- bind，重新定义一个变量，可用于模糊查询等，并且可以直接覆盖原变量 -->
					<bind name="username" value="'%' + _parameter.objectQuery.username + '%'" />
					and username like #{username}
				</if>
				<if test="objectQuery.name!=null and objectQuery.name.length()>0">
					<bind name="name" value="'%' + _parameter.objectQuery.name + '%'" />
					and name like #{name}
				</if>
				<if test="objectQuery.sex!=null and  objectQuery.sex!=0">
					and sex=#{objectQuery.sex}
				</if>
				<if test="objectQuery.changeInitialPassword!=null">
					<choose>
						<when test="objectQuery.changeInitialPassword==true">
							and password!='${@com.lcvc.ebuy_springboot.util.SHA@getResult(123456)}'
						</when>
						<otherwise>
							and password='${@com.lcvc.ebuy_springboot.util.SHA@getResult(123456)}'
						</otherwise>
					</choose>
				</if>
				<if test="objectQuery.uploadPhoto!=null">
					<choose>
						<when test="objectQuery.uploadPhoto==true">
							and (picUrl!='' or picUrl!=null)
						</when>
						<otherwise>
							and (picUrl='' or picUrl is null)
						</otherwise>
					</choose>
				</if>
			</where>
		</if>
	</select>
	<select id="getPartlist" resultType="Customer">
		select * from customer order by id asc limit #{offset},#{length}
	</select>
	<!--批量删除-->
	<delete id="deletes" >
		delete from customer where id in
		<foreach item="item" collection="array" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
</mapper>